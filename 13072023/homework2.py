# 22. Даны два неупорядоченных набора целых чисел (может быть, с
# повторениями). Выдать без повторений в порядке возрастания все те числа, которые
# встречаются в обоих наборах.
#
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
# элементов второго множества. Затем пользователь вводит сами элементы множеств
#
# Пример:
# 11 6
# 2 4 6 8 10 12 10 8 6 4 2
# 3 6 9 12 15 18
#
# 6 12

# n = int(input('Введите кол-во элементов первого набора: '))
# m = int(input('Введите кол-во элементов второго набора: '))
# set_n = []
# set_m = []
# for _ in range(n):
#     nums_n = int(input('Введите элементы первого набора: '))
#     set_n.append(nums_n)
# for _ in range(m):
#     nums_m = int(input('Введите элементы второго набора: '))
#     set_m.append(nums_m)
# i = set(set_n).intersection(set(set_m))
# print(sorted(i))

# 24. В фермерском хозяйстве в Карелии выращивают чернику. Она растет на
# круглой грядке, причем кусты высажены только по окружности. Таким образом, у
# каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
# выросло различное число ягод – на i-ом кусте выросло ai ягод.

# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может
# собрать за один заход собирающий модуль, находясь перед некоторым кустом
# заданной во входном файле грядки.

# Пример:
# 4 -> 1 2 3 4
# 9

# import random
#
# n = int(input('Введите кол-во кустов: '))
# some_list = list(random.randint(1, 4) for i in range(n))
# print(some_list)
# a = int(input('Введите номер куста: '))
# res = 0
# if a == 1:
#     res = some_list[0] + some_list[1] + some_list[-1]
# elif a == (len(some_list)):
#     res = some_list[-2] + some_list[-1] + some_list[0]
# else:
#     res = some_list[a - 1] + some_list[a - 2] + some_list[a]
# print(res)