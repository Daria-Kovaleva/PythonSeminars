# Задание №57
#
# import pandas as pd
#
# df = pd.read_csv('/content/sample_data/california_housing_test.csv')
# df
#
#
# df.head() # функция для просмотра строк с начала (по умолчанию показывает первые 5). в скобках указываем желаемое кол-во строк
#
# df.tail() # функция для просмотра строк с конца (по умолчанию показывает посление 5). в скобках указываем желаемое кол-во строк
#
# df.shape # функция для определения кол-ва строк и столбцов в таблице
#
# df.columns # функция для просмотра названий всех солбцов в таблице
#
# df.dtypes # функция для определения типов данных каждого столбца таблицы
#
#
# Задание №59
#
# df.isnull().sum() # функция для обнаружения пустых значение в таблице. дополнительная функци .sum() позволяет привести изначальный вариант к, более приятному глазу, виду
#
# # Показать median_house_value где median_income < 2
# df['median_house_value'][df['median_income'] < 2]
#
# # ещё один вариант записи для условия выше
# df.loc[df['median_income'] < 2, 'median_house_value']
#
# # Показать данные в первых 2 столбцах
# df[['longitude', 'latitude']]
#
# # вариант выше подходит для конкретного условия, где мы знаем названия столбцом. этот же вариант универсальнее
# df[df.columns[:2]]
#
# # Выбрать данные где housing_median_age < 20 и median_house_value > 70000
# df[(df['housing_median_age'] < 20) & (df['median_house_value'] > 70000)]
# # & - и
# # | - или
#
#
# Задание №61
#
# # Определить какое максимальное и минимальное значение median_house_value
# df['median_house_value'].min(), df['median_house_value'].max()
#
# df['median_house_value'].describe() # функция для просмотра статистики
#
# # count - Общее кол-во не пустых строк,
# # mean - среднее значение в столбце
# # std - стандартное отклонение от среднего значения,
# # min - минимальное значение,
# # max - максимальное значение
# # Числа 25%, 50%, 75% - перцентили
#
#
# # Показать максимальное median_house_value, где median_income = 3.1250
# df['median_house_value'][df['median_income'] == 3.125].max()
#
#
